<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
   http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
   http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">

    <!-- 基于Druid数据库链接池的数据源配置 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <!-- 基本属性driverClassName、 url、user、password -->
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 配置初始化大小、最小、最大 -->
        <!-- 通常来说，只需要修改initialSize、minIdle、maxActive -->
        <property name="initialSize" value="10" />
        <property name="minIdle" value="5" />
        <property name="maxActive" value="300" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="true" />
        <property name="validationQuery" value="SELECT 1" />


        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="5000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="30000" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 解密密码必须要配置的项 -->
        <!-- 		  <property name="filters" value="config,stat,log4j,wall,mergeStat" /> -->
        <property name="filters" value="config,stat,log4j,mergeStat" />
        <property name="connectionProperties" value="config.decrypt=true" />
    </bean>

    <!--For Mysql 以注解的方式管理sessionFactory和事务 lsy 20170829-->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <!-- <bean id="sessionFactory" class="org.springframework.orm.hibernate3.SpringSessionContext"> -->
        <!-- lsy update by 2017.05.14 -->
        <!-- <property name="dataSource" ref="dataSource" /> -->
        <property name="dataSource" ref="dataSource" />
        <!-- lsy update end -->
        <property name="packagesToScan" value="com.fxb.mvc"/>
        <property name="hibernateProperties">
            <props>
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop> -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <!-- <prop key="hibernate.autoReconnect">true</prop> -->
                <!-- <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop> -->
                <!--解决sessionFactory.getCurrentSession()或sessionFactory.openSession()的问题  -->
                <prop key="current_session_context_class">thread</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <!-- <prop key="hibernate.dialect">org.szjz.framework.core.dao.utils.Oracle10gDialectOverrider</prop> -->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.cache.use_query_cache">false</prop>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <!-- <prop key="hibernate.c3p0.max_size">20</prop>
              <prop key="hibernate.c3p0.timeout">1800</prop>
              <prop key="hibernate.c3p0.max_statements">50</prop>   -->
            </props>
        </property>
    </bean>

    <!-- 配置事物管理器，交由hibernate管理事务,基建和审计系统都是以这种方式管理事务  lsy 20170829-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
        <!--如不需要使用seata直接代理数据源换成原来数据源即可-->
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 自定义动态切换SessionFactory事务管理器，注入sessionFactory  lsy 20170829 -->
    <!--   <bean id="transactionManager" class="com.szjz.service.admin.datasource.impl.MutiTransactionManager">
          <property name="sessionFactory" ref="sessionFactory" />
      </bean>
       -->
    <!-- 配置注解实现管理事务（cglib：proxy-target-class="true"） -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

</beans>